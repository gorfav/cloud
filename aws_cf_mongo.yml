---
# This Playbook is to test the cloudformation ansible plugin

- hosts: localhost
  gather_facts: no
  sudo: yes
  connection: local

  tasks:

  - name: Get VPC
    ec2_vpc_subnet_facts:
     region: "{{region}}"
     filters:
        "tag:aws:cloudformation:stack-name": "{{stackname}}"
    register: curvpc

  - name: Get Info based On Tags
    ec2_remote_facts:
     region: "{{region}}"
     filters:
       vpc-id: "{{curvpc.subnets[0].vpc_id}}"
       "tag:Type": MongoDBReplica
    register: ec2


  - name: Add all instance public IPs to host group
    add_host: hostname={{item.private_dns_name|regex_replace('\.\S+')}}
              ansible_ssh_private_key_file="/home/ansible/.ssh/mykey.pem"			  
              groups=mongo_servers
              tag={{ec2}}
    with_items: ec2.instances
    when: "{{replica_set}} == 1"
  
  - name: Add all instance public IPs to host group when replica is greater
    add_host: hostname={{item.private_dns_name|regex_replace('\.\S+')}}
              groups=mongo_servers
              ansible_ssh_private_key_file="/home/ansible/.ssh/mykey.pem"
              mongod_port={{mongod_port_def+item.tags.ClusterReplicaSetCount|int}}
              mongo_dns_name={{item.private_dns_name}}
    with_items: ec2.instances
    when: "{{replica_set}} == 3" 


  - name: Add all instance public IPs to host group for Replica Set
    add_host: hostname={{item.private_dns_name|regex_replace('\.\S+')}}
              groups=replication_servers
              ansible_ssh_private_key_file="/home/ansible/.ssh/mykey.pem"
              mongod_port={{mongod_port_def+item.tags.ClusterReplicaSetCount|int}}
    with_items: ec2.instances
    when: "{{replica_set}} == 3"
  

- hosts: mongo_servers
  gather_facts: yes
  remote_user: ec2-user
  serial: 1

  pre_tasks:

  - name: Install ansible key
    authorized_key: user=ec2-user
                    key="{{lookup('file', '/home/ansible/.ssh/id_rsa.pub')}}"


  roles:
  - { role: common, mongoDBInstances: "{{tag.instances}}" }
  - { role: mongod } 
  
  post_tasks:

  - name: Remove bind ip
    become: yes
    become_method: sudo
    replace: dest=/etc/mongod.conf regexp="^bind_ip=127.0.0.1" replace="#bind_ip=127.0.0.1"

  - name: Start Mongodb
    become: yes
    become_method: sudo
    service: name=mongod state=restarted

  - name: Get MongoDB example
    run_once: yes
    become: yes
    become_method: sudo
    become_user: mongod
    get_url: url=https://raw.githubusercontent.com/mongodb/docs-assets/primer-dataset/dataset.json
         dest="/tmp/primer-dataset.json"

  - name: Import dataset into mongodb
    run_once: yes
    become: yes
    become_method: sudo
    become_user: mongod
    shell: mongoimport --db test --collection restaurants --drop --file /tmp/primer-dataset.json

  - name: Pause
    pause: seconds=5
- hosts: localhost
  gather_facts: no

  tasks:
  roles:
  - { role: aws }
