---
# This Playbook is to test the cloudformation ansible plugin

- hosts: localhost
  gather_facts: no
  sudo: yes
  connection: local

  tasks: 
  - name: Get Info based On Tags
    ec2_remote_facts:
     region: "{{region}}"
     filters:       
       "tag:Type": mongoSVT
    register: ec2


  - name: Add all instance public IPs to host group
    add_host: hostname={{item.private_dns_name|regex_replace('\.\S+')}}
              ansible_ssh_private_key_file="/home/ansible/.ssh/mykey.pem"			  
              groups=mongo_svt              
    with_items: ec2.instances
    
  - name: Get List of MongoDB Replica Sets based on Farm Name
    ec2_remote_facts:
      region: "{{region}}"
      filters:       
       "tag:farmName": "{{farmname}}"
    register: ec2MNG

  - name: Add all instance of mongoDB private IPs to host group
    add_host: hostname={{item.private_ip_address}}
              ansible_ssh_private_key_file="/home/ansible/.ssh/mykey.pem"			  
              groups=mongo_replica
    with_items: ec2MNG.instances

    
  - name: Change private key permission
    file: path=/home/ansible/.ssh/id_rsa.pub mode=0400

  - name: Wait for instance to start up and be running
    wait_for: host={{item.private_ip_address}} port=22 delay=1 timeout=320 state=started
    with_items: ec2.instances

  - name: Create the hosts file for the local machine
    sudo: yes
    template: src=/home/ansible/staging/files/inventory.j2 dest=/etc/hosts

- hosts: mongo_replica
  gather_facts: yes
  remote_user: ec2-user  

  tasks:
  - name: Pause
    pause: seconds=5

- hosts: mongo_replica
  gather_facts: yes
  remote_user: ec2-user  

  tasks:
  - name: Find Primary 
    shell: "mongo --eval "printjson(db.isMaster())" | grep "ismaster" | awk '{print $3}' | cut -f1 -d','"     
    register: mngInst = hostvars[inventory_hostname].tags.mngDNS
    when: stdout_lines == "true" 


- hosts: mongo_svt
  gather_facts: yes
  remote_user: ec2-user  

  tasks:
  - name: Pause
    pause: seconds=5
  
- hosts: mongo_svt
  gather_facts: yes
  remote_user: ec2-user
  

  pre_tasks:
  - debug: var=hostvars[inventory_hostname]

  - name: Install ansible key
    authorized_key: user=ec2-user
                    key="{{lookup('file', '/home/ansible/.ssh/id_rsa.pub')}}"

  roles:
  - { role: ycsb }

  post_tasks:
  - name: Pause
    pause: seconds=5
