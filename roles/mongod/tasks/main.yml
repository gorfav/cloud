---
# This role deploys the mongod processes and sets up the replication set.

- name: create data directory for mongodb
  sudo: yes
  #file: path={{ mongodb_datadir_prefix }}/mongo-{{ inventory_hostname }} state=directory owner=mongod group=mongod
  file: path={{ mongodb_datadir_prefix }}/mongo state=directory owner=mongod group=mongod
#  delegate_to: '{{ item }}'
#  with_items: groups.replication_servers

- name: create log directory for mongodb
  sudo: yes
  file: path=/var/log/mongo state=directory owner=mongod group=mongod

- name: create run directory for mongodb
  sudo: yes
  file: path=/var/run/mongo state=directory owner=mongod group=mongod

- name: Create the mongodb startup file
  sudo: yes
#  template: src=mongod.j2 dest=/etc/init.d/mongod-{{ inventory_hostname }} mode=0655
  template: src=mongod.j2 dest=/etc/init.d/mongod mode=0655
#  delegate_to: '{{ item }}'
#  with_items: groups.replication_servers


- name: Create the mongodb configuration file
  sudo: yes
  #template: src=mongod.conf.j2 dest=/etc/mongod-{{ inventory_hostname }}.conf
  template: src=mongod.conf.j2 dest=/etc/mongod.conf 
#  delegate_to: '{{ item }}'
#  with_items: groups.replication_servers

- name: Copy the keyfile for authentication
  sudo: yes
  copy: src=secret dest={{ mongodb_datadir_prefix }}/secret owner=mongod group=mongod mode=0400


- name: Start the mongodb service
  sudo: yes
  #command: creates=/var/lock/subsys/mongod-{{ inventory_hostname }} /etc/init.d/mongod-{{ inventory_hostname }} restart
  command: creates=/var/lock/subsys/mongod /etc/init.d/mongod restart
#  shell: /etc/init.d/mongod-{{ inventory_hostname }} restart
#  delegate_to: '{{ item }}'
#  with_items: groups.replication_servers

- name: Create the file to initialize the mongod replica set
  sudo: yes
  template: src=repset_init.j2 dest=/tmp/repset_init.js
  when: "{{hostvars[inventory_hostname].mongod_port == '27017'}}"

- name: Pause for a while
  pause: seconds=20
